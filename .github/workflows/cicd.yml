name: rentngo-cicd
on:
  push:
    branches:
      - "*"
  workflow_dispatch:

env:
  POSTGRES_DB: ci
  POSTGRES_USER: ci
  POSTGRES_PASSWORD: ci
  POSTGRES_HOST: db_server
  POSTGRES_PORT: 5432
  NODE_ENV: ci
  SERVER_USER: rentngouat
  SERVER_DOMAIN: rentngo.marcoding.me
  SERVER_HOST: rentngo
  SERVER_DIR: ~/rentngo
  pm2_NAME: rentngo

jobs:
  test:
    runs-on: ubuntu-latest
    container: node:20.10.0-slim
    services:
      db_server:
        image: postgres:14.10-alpine3.19
        env:
          POSTGRES_DB: ${{env.POSTGRES_DB}}
          POSTGRES_USER: ${{env.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{env.POSTGRES_PASSWORD}}
          POSTGRES_PORT: ${{env.POSTGRES_POST}}
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          npm install 
      - name: migrate database
        run: |
          npx knex migrate:latest --env ci 
      - name: run tests cases
        run: |
          npm test
  build:
    runs-on: ubuntu-latest
    container: node:20.10.0-slim
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies 
        run: |
          npm install 
      - name: build typescript project
        run: |
          npm run build
      - name: prepare archive built files
        run: |
          mkdir -p release
          mv package.json dist public release
      - name: upload release archive
        uses: actions/upload-artifact@v4
        with:
          name: release-archive
          path: release      
  deploy:
    if: github.ref_name == 'production'
    needs: [test,build]
    runs-on: ubuntu-latest
    steps:
      - name: add server fingerprint
        run: |
          mkdir -p ~/.ssh   
          cd ~/.ssh
          ssh-keyscan ${{env.SERVER_DOMAIN}} >> ~/.ssh/known_hosts
      - name: setup ssh private key
        run: |
          cd ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" > key.pem
          chmod 400 key.pem
      - name: set up ssh profile
        run: |
          echo "
          Host ${{env.SERVER_HOST}}
             Hostname ${{env.SERVER_DOMAIN}}
             User ${{env.SERVER_USER}}
             IdentityFile = ~/.ssh/key.pem
          " > ~/.ssh/config
      - name: check connection to server
        run: |
          ssh ${{env.SERVER_HOST}}
      - name: download release archive
        uses: actions/download-artifact@v4
        with:
          name: release-archive
          path: release
      - name: upload to server
        run: |
          cd release
          scp -r \
            package.json \
            dist \
            public \
            "${{env.SERVER_HOST}}:${{env.SERVER_DIR}}/"
      - name: instsall dependencies on server
        run: |
          ssh ${{env.SERVER_HOST}} "
            sp\ource ~/.nvm/nvm.sh
            cd ${{env.SERVER_DIR}}
            npm install --omit=dev 
          "
      - name: Migrate database
        run: |
          ssh ${{env.SERVER_HOST}} "
            sp\ource ~/.nvm/nvm.sh
            cd ${{env.SERVER_DIR}}
            cd .env dist/
            cd dist
            npx knex migrate:latest
          "
      - name: reload pm2 process
        run: |
          ssh ${{env.SERVER_HOST}} "
            sp\ource ~/.nvm/nvm.sh
            pm2 reload ${{env.PM2_NAME}}
          "
         

      
 